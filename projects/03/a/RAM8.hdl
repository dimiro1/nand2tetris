// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way (
    	in=load, 
    	sel=address, 
    	a=load0, b=load1, 
    	c=load2, d=load3, 
    	e=load4, f=load5, 
    	g=load6, h=load7
    );
    Register (in=in, load=load0, out=c0);
    Register (in=in, load=load1, out=c1);
    Register (in=in, load=load2, out=c2);
    Register (in=in, load=load3, out=c3);
    Register (in=in, load=load4, out=c4);
    Register (in=in, load=load5, out=c5);
    Register (in=in, load=load6, out=c6);
    Register (in=in, load=load7, out=c7);
    Mux8Way16 (
    	a=c0, b=c1, 
    	c=c2, d=c3, 
    	e=c4, f=c5, 
    	g=c6, h=c7, 
    	sel=address, 
    	out=out)
    ;
}